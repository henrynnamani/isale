'use client';

import { PropsWithChildren } from 'react';
import { Inter } from 'next/font/google';
import { SWRConfig } from 'swr';
import axios from 'axios';
import { Toaster } from '@/components/ui/sonner';
import { parseCookies } from 'nookies';

import './globals.css';
import { parseCookie } from 'next/dist/compiled/@edge-runtime/cookies';
const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
//   title: 'Graey.co',
//   description: 'Generated by create turbo',
// };

const BASE_URL =
  process.env.NEXT_PUBLIC_API_BASE_URL || `http://localhost:3000/api/v1/`;

export const axiosInstance = axios.create({
  baseURL: BASE_URL,
  headers: {
    'Content-Type': 'application/json',
  },
  timeout: 10000,
});

axiosInstance.interceptors.request.use(
  (config) => {
    const token = parseCookies().accessToken;
    if (token) {
      config.headers = config.headers || {};
      config.headers.Authorization = `Bearer ${token}`;
    }
    return config;
  },
  (error) => Promise.reject(error),
);

const fetcher = async (url: string, config?: object) => {
  try {
    const response = await axiosInstance.get(url, config);
    return response.data;
  } catch (error) {
    throw error;
  }
};

export default function RootLayout({ children }: Readonly<PropsWithChildren>) {
  return (
    <html lang="en">
      <SWRConfig
        value={{
          refreshInterval: 60000,
          fetcher: fetcher,
        }}
      >
        <body className={inter.className}>
          {children}
          <Toaster />
        </body>
      </SWRConfig>
    </html>
  );
}
